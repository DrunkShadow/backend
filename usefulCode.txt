// function POST(EntityManagerInterface $entityManager): Response
// {
//     $project = new Project();

//     $project->setId(1);
//     $project->setCategory('Economy');
//     $project->setName('Projecta1');
//     $project->setBudget(1000.020);
//     $date = new \DateTime('now', new \DateTimeZone('UTC'));

//     $project->setDate($date);

//     $entityManager->persist($project);

//     $entityManager->flush();

//     return new Response('Saved new project with id '.$project->getId());
        
// }





========================================= showing all keywords ===========================================
 <!--
<div class="table-container">
  <table *ngFor="let obj of keyObjectsArray " class="side-by-side-table">
    <tr>{{obj.concernedObject}}</tr>
    <br>
    <tr *ngFor="let key of keywordsArray">
      <td *ngIf="key.concernedObject == obj.concernedObject">{{'{{'}} {{key.value}} {{'}}'}}</td>
    </tr>
  </table>
</div>
<div id="textAreaContainer">
  <textarea [(ngModel)]="reportText"> </textarea>
  <button (click)="savePdf()" > Download PDF</button>
</div>
<div>
</div>
-->

/**
 * 
 * 
 *   @Input() ImportedId: string = '';

  keywordsArray: any[] = [];
  // keyObjectsArray: any[] = [];
  reportText: string = '';
  convertedReportText: string = '';
  chosenProject: Project = {} as Project;
  chosenWorker: Worker = {} as Worker;



  ngOnInit() {
    this.getKeywords();
    this.getObjectsNumber();
  }

  getKeywords() {
    fetch('http://127.0.0.1:8000/keywords')
      .then(response => response.json())
      .then(data => {
        this.keywordsArray = data;
      })
      .catch(error => this.handleError(error));
  }

  getObjectsNumber() {
    fetch('http://127.0.0.1:8000/keywordsObjects')
      .then(response => response.json())
      .then(data => {
        this.keyObjectsArray = data;
      })
      .catch(error => this.handleError(error));
  }

  DownloadPDF() {
    const maxWidth = 180;
    const pdf = new jsPDF("p", "mm", "a4");
    const lineBrokeText = pdf.splitTextToSize(this.convertedReportText, maxWidth);
    pdf.text(lineBrokeText, 10, 10);
    pdf.save('Generate_project_report');
  }

  getProjectbyId() {
    fetch(`http://127.0.0.1:8000/projects/${this.ImportedId}`)
      .then(response => response.json())
      .then(data => {
        this.chosenProject = data;
        this.changeText();
        this.DownloadPDF();
      })
      .catch(error => this.handleError(error));
  }

  getWorkerbyId() {
    fetch(`http://127.0.0.1:8000/workers/${this.ImportedId}`)
      .then(response => response.json())
      .then(data => {
        this.chosenWorker = data;
        this.changeText();
        this.DownloadPDF();
      })
      .catch(error => this.handleError(error));
  }

  changeText() {
    this.convertedReportText = this.reportText;
    if (parseInt(this.ImportedId) / 10000 >= 1) {
      this.replaceWorkerKeyWords();
    } else {
      this.replaceProjectKeyWords();
    }
  }

  private handleError(error: any) {
    console.error('Error fetching data:', error);
  }


  replaceKeywords(data: any, template: string): string {
    const compiledTemplate = Handlebars.compile(template);
    return compiledTemplate(data);
  }

  replaceWorkerKeyWords() {

    var data = {
      worker_id : this.chosenWorker.id,
      worker_name: this.chosenWorker.name,
      worker_last_name: this.chosenWorker.lastName,
      worker_title: this.chosenWorker.title,
  };
    this.convertedReportText = this.replaceKeywords(data, this.reportText);
  }

  replaceProjectKeyWords() {
    var data = {
      project_id : this.chosenProject.id,
      project_name: this.chosenProject.name,
      project_budget: this.chosenProject.budget,
      project_category: this.chosenProject.category,
      project_date: this.chosenProject.date.substring(0,10),

  };
    this.convertedReportText = this.replaceKeywords(data, this.reportText);

  }
  
  savePdf() {
    if (parseInt(this.ImportedId) / 10000 >= 1) {
      this.getWorkerbyId();
    } else {
      this.getProjectbyId();
    }
  }

 */
             {# <select [(ngModel)]="selectObjects" multiple >
                    <option *ngFor="let obj of keyObjectsArray" (click)="onChosen(obj.concernedObject)">{{obj.concernedObject}}</option>
            </select> #}